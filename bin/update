#!/usr/bin/env bash
#/ Usage: bin/update
#/ Description: Updates project dependencies to their latest versions
#/ 
#/ This script updates dependencies while respecting version constraints.
#/ Always run tests after updating to ensure nothing broke.

source bin/helpers/_utils.sh
set_source_and_root_dir
parse_common_args "$@"

print_color blue "Updating project dependencies..."

# Node.js
if [ -f "package.json" ]; then
    if [ -f "package-lock.json" ]; then
        run_command "npm update" "Updating Node.js dependencies"
        run_command "npm audit fix" "Fixing security vulnerabilities"
    elif [ -f "yarn.lock" ]; then
        run_command "yarn upgrade" "Updating Node.js dependencies with Yarn"
    elif [ -f "pnpm-lock.yaml" ]; then
        run_command "pnpm update" "Updating Node.js dependencies with pnpm"
    fi
fi

# Python
if [ -f "requirements.txt" ]; then
    if command_exists pip-compile; then
        run_command "pip-compile --upgrade requirements.in" "Updating Python dependencies"
    else
        print_color yellow "Consider using pip-tools for better dependency management"
    fi
elif [ -f "pyproject.toml" ] && command_exists poetry; then
    run_command "poetry update" "Updating Python dependencies with Poetry"
elif [ -f "Pipfile" ] && command_exists pipenv; then
    run_command "pipenv update" "Updating Python dependencies with Pipenv"
fi

# Ruby
if [ -f "Gemfile" ]; then
    run_command "bundle update" "Updating Ruby dependencies"
fi

# .NET
if compgen -G "*.sln" > /dev/null || compgen -G "*.csproj" > /dev/null; then
    # Update NuGet packages
    if compgen -G "*.sln" > /dev/null; then
        for sln in *.sln; do
            run_command "dotnet list \"$sln\" package --outdated" "Checking outdated packages"
        done
    fi
    print_color yellow "Use 'dotnet add package <name>' to update specific packages"
fi

# Go
if [ -f "go.mod" ]; then
    run_command "go get -u ./..." "Updating Go dependencies"
    run_command "go mod tidy" "Tidying Go modules"
fi

# Rust
if [ -f "Cargo.toml" ]; then
    run_command "cargo update" "Updating Rust dependencies"
fi

# Run bootstrap to ensure everything is properly installed
print_color blue "Running bootstrap to ensure consistency..."
bin/bootstrap

print_color green "âœ“ Dependencies updated"
print_color yellow "Remember to run 'bin/test' to ensure everything still works!"