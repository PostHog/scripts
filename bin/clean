#!/usr/bin/env bash
#/ Usage: bin/clean
#/ Description: Removes build artifacts and temporary files
#/ 
#/ This script removes common build artifacts, caches, and temporary files.
#/ It's safe to run and won't delete source code or configuration.

source bin/helpers/_utils.sh
set_source_and_root_dir
parse_common_args "$@"

print_color blue "Cleaning build artifacts and temporary files..."

# Node.js
if [ -d "node_modules" ]; then
    if [ -d "dist" ]; then
        run_command "rm -rf dist" "Removing dist directory"
    fi
    if [ -d "build" ]; then
        run_command "rm -rf build" "Removing build directory"
    fi
    if [ -d ".next" ]; then
        run_command "rm -rf .next" "Removing Next.js build"
    fi
    if [ -d "coverage" ]; then
        run_command "rm -rf coverage" "Removing coverage reports"
    fi
    run_command "rm -rf *.log" "Removing log files"
fi

# Python
if [ -d "__pycache__" ] || [ -d ".pytest_cache" ]; then
    run_command "find . -type d -name '__pycache__' -exec rm -rf {} +" "Removing Python cache"
    run_command "find . -type f -name '*.pyc' -delete" "Removing compiled Python files"
    run_command "rm -rf .pytest_cache" "Removing pytest cache"
    run_command "rm -rf .mypy_cache" "Removing mypy cache"
    run_command "rm -rf .ruff_cache" "Removing ruff cache"
    run_command "rm -rf dist build *.egg-info" "Removing Python build artifacts"
    run_command "rm -rf .coverage coverage.xml htmlcov" "Removing coverage reports"
fi

# Ruby
if [ -f "Gemfile" ]; then
    run_command "rm -rf coverage" "Removing coverage reports"
    run_command "rm -rf .bundle" "Removing bundle config"
    run_command "rm -rf vendor/bundle" "Removing vendored gems"
fi

# .NET
if compgen -G "*.sln" > /dev/null || compgen -G "*.csproj" > /dev/null; then
    run_command "find . -type d -name 'bin' -exec rm -rf {} +" "Removing bin directories"
    run_command "find . -type d -name 'obj' -exec rm -rf {} +" "Removing obj directories"
    run_command "rm -rf TestResults" "Removing test results"
fi

# Go
if [ -f "go.mod" ]; then
    run_command "go clean -cache -testcache" "Cleaning Go cache"
    run_command "rm -rf bin" "Removing bin directory"
fi

# Rust
if [ -f "Cargo.toml" ]; then
    run_command "cargo clean" "Cleaning Rust build"
fi

# Java
if [ -f "pom.xml" ] || [ -f "build.gradle" ]; then
    run_command "rm -rf target" "Removing Maven target"
    run_command "rm -rf build" "Removing Gradle build"
    run_command "rm -rf .gradle" "Removing Gradle cache"
fi

# General
run_command "rm -rf .DS_Store" "Removing macOS files"
run_command "rm -rf .vscode/settings.json" "Removing VS Code settings"
run_command "rm -rf .idea" "Removing IntelliJ IDEA files"
run_command "find . -name '*.swp' -delete" "Removing vim swap files"
run_command "find . -name '*~' -delete" "Removing backup files"

print_color green "âœ“ Clean complete"